>>> from django.contrib.auth import get_user_model; User = get_user_model()
>>> user = User.objects.first()
>>> user
<User: admin>
>>> user.userprofile
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "E:\Safwan Python\Upwork\Yasg\Django 1\venv\lib\site-packages\django\db\models\fields\related_descriptors.py", line 461, in __get__
    raise self.RelatedObjectDoesNotExist(
django.contrib.auth.models.User.userprofile.RelatedObjectDoesNotExist: User has no userprofile.
>>> user
<User: admin>
>>> user.userprofile
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "E:\Safwan Python\Upwork\Yasg\Django 1\venv\lib\site-packages\django\db\models\fields\related_descriptors.py", line 461, in __get__
    raise self.RelatedObjectDoesNotExist(
django.contrib.auth.models.User.userprofile.RelatedObjectDoesNotExist: User has no userprofile.
>>> user.blog_set.all()
<QuerySet [<Blog: updated_blog>, <Blog: hello>, <Blog: title>, <Blog: hello>]>
>>> from main.models import Blog
>>> qs = Blog.objects.filter(user=user)
>>> qs
<QuerySet [<Blog: updated_blog>, <Blog: hello>, <Blog: title>, <Blog: hello>]>
>>> user
<User: admin>
>>> user.blog_set
<django.db.models.fields.related_descriptors.create_reverse_many_to_one_manager.<locals>.RelatedManager object at 0x000001537F068160>
>>> Blog.objects
<django.db.models.manager.Manager object at 0x000001537F068730>
>>> Blog.objects.filter
<bound method BaseManager._get_queryset_methods.<locals>.create_method.<locals>.manager_method of <django.db.models.manager.Manager object at 0x000001537F068730>>
>>> Blog.objects.all
<bound method BaseManager.all of <django.db.models.manager.Manager object at 0x000001537F068730>>
>>> Blog.objectsfirst
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Blog' has no attribute 'objectsfirst'
>>> Blog.objects.first
<bound method BaseManager._get_queryset_methods.<locals>.create_method.<locals>.manager_method of <django.db.models.manager.Manager object at 0x000001537F068730>>
>>> user.blog_set.all()
<QuerySet [<Blog: updated_blog>, <Blog: hello>, <Blog: title>, <Blog: hello>]>
>>> user.blog_set.all()
<QuerySet [<Blog: updated_blog>, <Blog: hello>, <Blog: title>, <Blog: hello>]>
>>> user.blog_set.filter(title="hello")
<QuerySet [<Blog: hello>, <Blog: hello>]>
>>> Blog.objects.filter(user=user, title="hello")
<QuerySet [<Blog: hello>, <Blog: hello>]>